{
  "post": {
    "tags": ["Patients"],
    "summary": "Create new patient",
    "description": "Create a new patient record. Only accessible to authenticated medical personnel.",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": ["first_name", "last_name", "date_of_birth", "gender"],
            "properties": {
              "first_name": {
                "type": "string",
                "minLength": 2,
                "maxLength": 50,
                "description": "Patient's first name",
                "example": "Jane"
              },
              "last_name": {
                "type": "string",
                "minLength": 2,
                "maxLength": 50,
                "description": "Patient's last name",
                "example": "Doe"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "description": "Patient's date of birth (YYYY-MM-DD)",
                "example": "1990-05-15"
              },
              "gender": {
                "type": "string",
                "enum": ["male", "female", "other"],
                "description": "Patient's gender",
                "example": "female"
              },
              "phone": {
                "type": "string",
                "maxLength": 20,
                "description": "Patient's phone number (optional)",
                "example": "+1234567890"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Patient's email address (optional)",
                "example": "jane.doe@email.com"
              },
              "address": {
                "type": "string",
                "maxLength": 200,
                "description": "Patient's address (optional)",
                "example": "123 Main St, City, State 12345"
              },
              "emergency_contact": {
                "type": "string",
                "maxLength": 200,
                "description": "Emergency contact information (optional)",
                "example": "John Doe (Spouse) - +1987654321"
              },
              "medical_history": {
                "type": "string",
                "maxLength": 1000,
                "description": "Brief medical history notes (optional)",
                "example": "No known allergies. Previous surgery: Appendectomy in 2015."
              }
            }
          },
          "examples": {
            "basic": {
              "summary": "Basic patient information",
              "value": {
                "first_name": "Jane",
                "last_name": "Doe",
                "date_of_birth": "1990-05-15",
                "gender": "female",
                "phone": "+1234567890",
                "email": "jane.doe@email.com"
              }
            },
            "detailed": {
              "summary": "Detailed patient information",
              "value": {
                "first_name": "John",
                "last_name": "Smith",
                "date_of_birth": "1985-03-22",
                "gender": "male",
                "phone": "+1987654321",
                "email": "john.smith@email.com",
                "address": "456 Oak Ave, City, State 54321",
                "emergency_contact": "Mary Smith (Wife) - +1122334455",
                "medical_history": "Hypertension, Type 2 Diabetes. Allergic to penicillin."
              }
            }
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Patient created successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Patient created successfully"
                },
                "patient": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "first_name": {
                      "type": "string",
                      "example": "Jane"
                    },
                    "last_name": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "date_of_birth": {
                      "type": "string",
                      "format": "date",
                      "example": "1990-05-15"
                    },
                    "gender": {
                      "type": "string",
                      "example": "female"
                    },
                    "created_by": {
                      "type": "string",
                      "format": "uuid",
                      "example": "456e7890-e89b-12d3-a456-426614174000"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-15T10:30:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../swagger.json#/components/schemas/ValidationError"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized - Invalid or missing token",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../swagger.json#/components/schemas/Error"
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../swagger.json#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "get": {
    "tags": ["Patients"],
    "summary": "Get all patients",
    "description": "Retrieve a paginated list of all patients with optional filtering and search capabilities. Only accessible to authenticated medical personnel.",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "parameters": [
      {
        "name": "page",
        "in": "query",
        "description": "Page number for pagination",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        },
        "example": 1
      },
      {
        "name": "limit",
        "in": "query",
        "description": "Number of patients per page",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 20
        },
        "example": 20
      },
      {
        "name": "search",
        "in": "query",
        "description": "Search term for patient name",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "Jane Doe"
      },
      {
        "name": "gender",
        "in": "query",
        "description": "Filter by gender",
        "required": false,
        "schema": {
          "type": "string",
          "enum": ["male", "female", "other"]
        },
        "example": "female"
      },
      {
        "name": "sortBy",
        "in": "query",
        "description": "Sort field",
        "required": false,
        "schema": {
          "type": "string",
          "enum": ["created_at", "first_name", "last_name", "date_of_birth"],
          "default": "created_at"
        },
        "example": "created_at"
      },
      {
        "name": "sortOrder",
        "in": "query",
        "description": "Sort order",
        "required": false,
        "schema": {
          "type": "string",
          "enum": ["asc", "desc"],
          "default": "desc"
        },
        "example": "desc"
      }
    ],
    "responses": {
      "200": {
        "description": "Patients retrieved successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "patients": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                      },
                      "first_name": {
                        "type": "string",
                        "example": "Jane"
                      },
                      "last_name": {
                        "type": "string",
                        "example": "Doe"
                      },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-05-15"
                      },
                      "gender": {
                        "type": "string",
                        "example": "female"
                      },
                      "phone": {
                        "type": "string",
                        "example": "+1234567890"
                      },
                      "email": {
                        "type": "string",
                        "example": "jane.doe@email.com"
                      },
                      "created_by": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "456e7890-e89b-12d3-a456-426614174000"
                          },
                          "first_name": {
                            "type": "string",
                            "example": "John"
                          },
                          "last_name": {
                            "type": "string",
                            "example": "Smith"
                          },
                          "role": {
                            "type": "string",
                            "example": "doctor"
                          }
                        }
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z"
                      }
                    }
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 20
                    },
                    "total": {
                      "type": "integer",
                      "example": 150
                    },
                    "pages": {
                      "type": "integer",
                      "example": 8
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../swagger.json#/components/schemas/ValidationError"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized - Invalid or missing token",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../swagger.json#/components/schemas/Error"
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../swagger.json#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}
